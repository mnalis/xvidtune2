#!/bin/sh
# Matija Nalis <mnalis-git@voyager.hr> started 2020/02, GPLv3+

# FIXME - opcija da drzimo Vert.refresh konstantnim?
# FIXME - github
# FIXME - POSIX sh compatible

DEVICE="VGA1"

echo "Please read https://arachnoid.com/modelines/ for details on Modeline tuning"
echo "And make sure no values printed go negative (or too small) !!"
echo "Example monitor patterns test can be found at: https://www.eizo.be/monitor-test/"
echo


# if no modeline specified  in format:
# Modeline "1280x768_60.00" 80.14 1280 1344 1480 1680 768 769 772 795 -HSync +Vsync

if test -z "$1"
then
	echo No modeline specified, trying to get current one from "xvidtune -show"
	echo
	set -- `xvidtune -show`
fi

# remove the original modeline name
shift

DotClock=$1; shift
HDisp=$1; shift
HSyncStart=$1; shift
HSyncEnd=$1; shift
HTotal=$1; shift

VDisp=$1; shift
VSyncStart=$1; shift
VSyncEnd=$1; shift
VTotal=$1; shift

XV_COUNT=0
while true
do
        XV_COUNT=$((XV_COUNT+1)); name=mode_t$XV_COUNT
        echo   "Modeline $name $DotClock $HDisp $HSyncStart $HSyncEnd $HTotal  $VDisp $VSyncStart $VSyncEnd $VTotal $*"

        xrandr --delmode $DEVICE $name > /dev/null 2>&1
        xrandr --rmmode  $name > /dev/null 2>&1
        
        xrandr --newmode $name $DotClock $HDisp $HSyncStart $HSyncEnd $HTotal  $VDisp $VSyncStart $VSyncEnd $VTotal "$@"
        xrandr --addmode $DEVICE $name
        xrandr --output  $DEVICE --mode $name

        HBlanking=$((HTotal-HDisp))
        HSync=$((HSyncEnd-HSyncStart))
        HBl1=$((HSyncStart-HDisp))
        HBl2=$((HTotal-HSyncEnd))

        VBlanking=$((VTotal-VDisp))
        VSync=$((VSyncEnd-VSyncStart))
        VBl1=$((VSyncStart-VDisp))
        VBl2=$((VTotal-VSyncEnd))

	VRefresh=`echo "scale = 4; $DotClock * 1000000 / $HTotal / $VTotal" | bc -l`
        echo "H: 0 >> $HDisp >> [$HBl1{$HSync}$HBl2] >> $HTotal\t V: 0 >> $VDisp >> [$VBl1{$VSync}$VBl2] >> $VTotal\tV.Refresh: $VRefresh Hz"

        printf "Cmd: (l)eft, (r)ight, (w)ider, (n)arrower, hse/HSE, hss/HSS, dc/DC, \t(u)p, (d)own, (t)aller, (s)shorter, vse/VSE, vss/VSS: "
        read cmds

	for cmd in `echo $cmds`
	do 
	    #echo "processing: $cmd (from $cmds)"
            case "$cmd" in
                l)
                        echo "move left"
                        HSyncEnd=$((HSyncEnd+8))
                        HSyncStart=$((HSyncStart+8))
                        ;;
                r)
                        echo "move right"
                        HSyncEnd=$((HSyncEnd-8))
                        HSyncStart=$((HSyncStart-8))
                        ;;

                w)
                        echo "make wider"
                        HTotal=$((HTotal-8))
                        ;;

                n)
                        echo "make narrower"
                        HTotal=$((HTotal+8))
                        ;;

                u)
                        echo "move up"
                        VSyncEnd=$((VSyncEnd+8))
                        VSyncStart=$((VSyncStart+8))
                        ;;

                d)
                        echo "move down"
                        VSyncEnd=$((VSyncEnd-8))
                        VSyncStart=$((VSyncStart-8))
                        ;;

                t)
                        echo "make taller"
                        VTotal=$((VTotal-8))
                        ;;

                s)
                        echo "make shorter"
                        VTotal=$((VTotal+8))
                        ;;

		q)	echo "Quitting..."
			exit 0
			;;


		hse)
			echo "decrement HSyncEnd"
                        HSyncEnd=$((HSyncEnd-8))
			;;
		HSE)
			echo "increment HSyncEnd"
                        HSyncEnd=$((HSyncEnd+8))
			;;

		hss)
			echo "decrement HSyncStart"
                        HSyncStart=$((HSyncStart-8))
			;;
		HSS)
			echo "increment HSyncStart"
                        HSyncStart=$((HSyncStart+8))
			;;

		vse)
			echo "decrement VSyncEnd"
                        VSyncEnd=$((VSyncEnd-8))
			;;
		VSE)
			echo "increment VSyncEnd"
                        VSyncEnd=$((VSyncEnd+8))
			;;

		vss)
			echo "decrement VSyncStart"
                        VSyncStart=$((VSyncStart-8))
			;;
		VSS)
			echo "increment VSyncStart"
                        VSyncStart=$((VSyncStart+8))
			;;

		dc)
			echo "decrement DotClock"
                        DotClock=$(echo $DotClock-1 | bc)
			;;
		DC)
			echo "increment DotClock"
                        DotClock=$(echo $DotClock+1 | bc)
			;;

            esac
	done
        
        echo

done
